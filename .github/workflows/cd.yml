name: Continuous Deployment
on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
jobs:
  github_release:
    name: Creating github release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            artifact_prefix: macos
            target: x86_64-apple-darwin
            binary_postfix: ""
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-gnu
            binary_postfix: ""
          - os: windows-latest
            artifact_prefix: windows
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"
    steps:
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Checking out sources
        uses: actions/checkout@v1
      - name: Running cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --release --target ${{ matrix.target }}
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release

          strip tmpl${{ matrix.binary_postfix }}
          tar czvf tmpl-${{ matrix.artifact_prefix }}.tar.gz tmpl${{ matrix.binary_postfix }}

          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile tmpl-${{ matrix.artifact_prefix }}.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > tmpl-${{ matrix.artifact_prefix }}.sha256
          else
            shasum -a 256 tmpl-${{ matrix.artifact_prefix }}.tar.gz > tmpl-${{ matrix.artifact_prefix }}.sha256
          fi
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/tmpl-${{ matrix.artifact_prefix }}.tar.gz
            target/${{ matrix.target }}/release/tmpl-${{ matrix.artifact_prefix }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
